archivesBaseName = rootProject.antimatter_archive_base_name
version = "${rootProject.minecraft_version}-${rootProject.antimatter_mod_version}"

loom {
    accessWidenerPath = file("src/main/resources/antimatter.accesswidener")
}

boolean hasTesseract = findProject(':tesseract-common') != null

dependencies{
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    compileOnly("com.blamejared.crafttweaker:CraftTweaker-common-1.18.2:${rootProject.crafttweaker_version}")
    modCompileOnly("dev.latvian.mods:kubejs-fabric:${rootProject.kubejs_version}")
    if (hasTesseract) {
        implementation(project(path: ":tesseract-common", configuration: "namedElements"))
        implementation(project(path: ":fabricated-forge-caps", configuration: "namedElements"))
        implementation(project(path: ":fabricated-forge-recipe-api", configuration: "namedElements"))
    } else {
        modImplementation("com.github.GregTech-Intergalactical.TesseractAPI:TesseractAPI-tesseract-common:${tesseract_version}")
        modImplementation("com.github.GregTech-Intergalactical.TesseractAPI:TesseractAPI-tesseract-common-dep:${tesseract_version}")
    }
    compileOnly("com.electronwill.night-config:toml:${rootProject.nightconfig_version}")
    compileOnly("com.electronwill.night-config:core:${rootProject.nightconfig_version}")
    implementation 'com.github.Trinsdar:forgeconfigapiport-fabric:abc19f9a99'
}

architectury {
    common()
}

/*
publishing {
    tasks.publish.dependsOn "build", "reobfJar"
    publications {
        mavenJava(org.gradle.api.publish.maven.MavenPublication) {
            //artifactId = archivesBaseName
            artifact shadowJar
        }
    }
    repositories {
        if (rootProject.isCI && rootProject.isRELEASE) {
            maven {
                name = "GitHubPackages"
                url = "https://maven.pkg.github.com/GregTech-Intergalactical/TesseractAPI"
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        } else {
            maven { url "file:///${project.projectDir}/mcmodsrepo"}
        }
    }
    //repositories {
    //    rootProject.configurePublishingRepositories(delegate)
    //}
}*/
